diff -uNr openjdk-jdk11u/make/autoconf/build-aux/config.sub openjdk-jdk11u.mod/make/autoconf/build-aux/config.sub
--- openjdk-jdk11u/make/autoconf/build-aux/config.sub	2021-06-29 08:24:33.228856737 +0000
+++ openjdk-jdk11u.mod/make/autoconf/build-aux/config.sub	2021-06-29 09:14:11.818463161 +0000
@@ -30,7 +30,7 @@
 DIR=`dirname $0`
 
 # First, filter out everything that doesn't begin with "aarch64-"
-if ! echo $* | grep '^aarch64-' >/dev/null ; then
+if ! echo $* | egrep "^aarch64-|-ios|-android" >/dev/null ; then
     . $DIR/autoconf-config.sub "$@"
     # autoconf-config.sub exits, so we never reach here, but just in
     # case we do:
@@ -41,6 +41,10 @@
     case $1 in 
         -- )   # Stop option processing
             shift; break ;;
+	*-android* )
+            echo $1
+            exit
+            ;;
         aarch64-* )
             config=`echo $1 | sed 's/^aarch64-/arm-/'`
             sub_args="$sub_args $config"
diff -uNr openjdk-jdk11u/make/autoconf/platform.m4 openjdk-jdk11u.mod/make/autoconf/platform.m4
--- openjdk-jdk11u/make/autoconf/platform.m4	2021-06-29 08:24:33.239857692 +0000
+++ openjdk-jdk11u.mod/make/autoconf/platform.m4	2021-06-29 09:18:34.007226945 +0000
@@ -166,6 +166,10 @@
       VAR_OS=linux
       VAR_OS_TYPE=unix
       ;;
+    *android*)
+      VAR_OS=android
+      VAR_OS_TYPE=unix
+      ;;
     *solaris*)
       VAR_OS=solaris
       VAR_OS_TYPE=unix
diff -uNr openjdk-jdk11u/make/autoconf/toolchain.m4 openjdk-jdk11u.mod/make/autoconf/toolchain.m4
--- openjdk-jdk11u/make/autoconf/toolchain.m4	2021-06-29 08:24:33.240857779 +0000
+++ openjdk-jdk11u.mod/make/autoconf/toolchain.m4	2021-06-29 09:10:16.352019411 +0000
@@ -972,12 +972,13 @@
     BUILD_LDCXX="$BUILD_CXX"
 
     PATH="$OLDPATH"
-
+    if test "x$OPENJDK_TARGET_OS" != "xandroid"; then
     TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CC, [BuildC])
     TOOLCHAIN_EXTRACT_COMPILER_VERSION(BUILD_CXX, [BuildC++])
     TOOLCHAIN_PREPARE_FOR_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])
     TOOLCHAIN_EXTRACT_LD_VERSION(BUILD_LD, [build linker])
     TOOLCHAIN_PREPARE_FOR_LD_VERSION_COMPARISONS([BUILD_], [OPENJDK_BUILD_])
+    fi
   else
     # If we are not cross compiling, use the normal target compilers for
     # building the build platform executables.
diff -uNr openjdk-jdk11u/make/common/JdkNativeCompilation.gmk openjdk-jdk11u.mod/make/common/JdkNativeCompilation.gmk
--- openjdk-jdk11u/make/common/JdkNativeCompilation.gmk	2021-06-29 08:24:33.241857865 +0000
+++ openjdk-jdk11u.mod/make/common/JdkNativeCompilation.gmk	2021-06-29 09:20:15.279019551 +0000
@@ -72,6 +72,17 @@
 endif
 # If building static versions of libraries, make these return empty to avoid
 # declaring dependencies.
+
+
+ifeq ($(OPENJDK_TARGET_OS), android)
+  FindSrcDirsForLib = \
+    $(call uniq, $(wildcard \
+        $(TOPDIR)/src/$(strip $1)/$(OPENJDK_TARGET_OS)/native/lib$(strip $2) \
+        $(TOPDIR)/src/$(strip $1)/$(OPENJDK_TARGET_OS_TYPE)/native/lib$(strip $2) \
+        $(TOPDIR)/src/$(strip $1)/linux/native/lib$(strip $2) \
+        $(TOPDIR)/src/$(strip $1)/share/native/lib$(strip $2)))
+endif
+
 ifeq ($(STATIC_LIBS), true)
   FindLib =
   FindStaticLib =
diff -uNr openjdk-jdk11u/make/common/Modules.gmk openjdk-jdk11u.mod/make/common/Modules.gmk
--- openjdk-jdk11u/make/common/Modules.gmk	2021-06-29 08:24:33.241857865 +0000
+++ openjdk-jdk11u.mod/make/common/Modules.gmk	2021-06-29 09:21:07.676568802 +0000
@@ -228,6 +228,10 @@
   MODULES_FILTER += jdk.aot
 endif
 
+ifeq ($(OPENJDK_TARGET_OS), android)
+  SRC_SUBDIRS += linux/classes
+endif
+
 ################################################################################
 # Module list macros
 
