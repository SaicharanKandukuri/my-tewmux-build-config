diff --git a/clients/desktop-shell.c b/clients/desktop-shell.c
index f3821f6..cdd2b54 100644
--- a/clients/desktop-shell.c
+++ b/clients/desktop-shell.c
@@ -1159,7 +1159,7 @@ background_create(struct desktop *desktop, struct output *output)
 	weston_config_section_get_string(s, "background-type",
 					 &type, "tile");
 	if (type == NULL) {
-		fprintf(stderr, "%s: out of memory\n", program_invocation_short_name);
+		printf(stderr);
 		exit(EXIT_FAILURE);
 	}
 
diff --git a/clients/touch-calibrator.c b/clients/touch-calibrator.c
index 66208d1..0f5727e 100644
--- a/clients/touch-calibrator.c
+++ b/clients/touch-calibrator.c
@@ -869,7 +869,7 @@ pr_err(const char *fmt, ...)
 	va_list argp;
 
 	va_start(argp, fmt);
-	fprintf(stderr, "%s error: ", program_invocation_short_name);
+	printf(stderr);
 	vfprintf(stderr, fmt, argp);
 	va_end(argp);
 }
@@ -880,8 +880,7 @@ help(void)
 	fprintf(stderr, "Compute a touchscreen calibration matrix for "
 		"a Wayland compositor by\n"
 		"having the user touch points on the screen.\n\n");
-	fprintf(stderr, "Usage: %s [options...] name\n\n",
-		program_invocation_short_name);
+	printf(stderr);
 	fprintf(stderr,
 		"Where 'name' can be a touch device sys path or a head name.\n"
 		"If 'name' is not given, all devices available for "
diff --git a/libweston/input.c b/libweston/input.c
index 8f6abd5..dcd91c8 100644
--- a/libweston/input.c
+++ b/libweston/input.c
@@ -34,7 +34,7 @@
 #include <sys/mman.h>
 #include <assert.h>
 #include <unistd.h>
-#include <values.h>
+#include <limits.h>
 #include <fcntl.h>
 #include <limits.h>
 #include <errno.h>
diff --git a/meson_options.txt b/meson_options.txt
index d404aef..a538b7b 100644
--- a/meson_options.txt
+++ b/meson_options.txt
@@ -5,13 +5,13 @@
 option(
 	'backend-drm',
 	type: 'boolean',
-	value: true,
+	value: false,
 	description: 'Weston backend: DRM/KMS'
 )
 option(
 	'backend-drm-screencast-vaapi',
 	type: 'boolean',
-	value: true,
+	value: false,
 	description: 'DRM/KMS backend support for VA-API screencasting'
 )
 option(
@@ -54,21 +54,21 @@ option(
 	'backend-default',
 	type: 'combo',
 	choices: [ 'auto', 'drm', 'wayland', 'x11', 'fbdev', 'headless' ],
-	value: 'drm',
+	value: 'wayland',
 	description: 'Default backend when no parent display server detected'
 )
 
 option(
 	'renderer-gl',
 	type: 'boolean',
-	value: true,
+	value: false,
 	description: 'Weston renderer: EGL / OpenGL ES 2.x'
 )
 
 option(
 	'weston-launch',
 	type: 'boolean',
-	value: true,
+	value: false,
 	description: 'Weston launcher for systems without logind'
 )
 
@@ -88,7 +88,7 @@ option(
 option(
 	'systemd',
 	type: 'boolean',
-	value: true,
+	value: false,
 	description: 'systemd service plugin: state notify, watchdog, socket activation'
 )
 
@@ -141,7 +141,7 @@ option(
 option(
 	'deprecated-wl-shell',
 	type: 'boolean',
-	value: false,
+	value: true,
 	description: 'Enable the deprecated wl_shell protocol'
 )
 
@@ -161,7 +161,7 @@ option(
 option(
 	'launcher-logind',
 	type: 'boolean',
-	value: true,
+	value: false,
 	description: 'Compositor: support systemd-logind D-Bus protocol'
 )
 
@@ -200,8 +200,8 @@ option(
 option(
 	'simple-clients',
 	type: 'array',
-	choices: [ 'all', 'damage', 'im', 'egl', 'shm', 'touch', 'dmabuf-v4l', 'dmabuf-egl' ],
-	value: [ 'all' ],
+	choices: [ 'all', 'damage', 'im', 'egl', 'shm', 'touch', 'dmabuf-v4l' ],
+	value: [ 'damage' ],
 	description: 'Sample clients: simple test programs'
 )
 
diff --git a/protocol/meson.build b/protocol/meson.build
index 25cea5a..45c1762 100644
--- a/protocol/meson.build
+++ b/protocol/meson.build
@@ -1,4 +1,4 @@
-dep_scanner = dependency('wayland-scanner', native: true)
+dep_scanner = dependency('wayland-scanner', native: false)
 prog_scanner = find_program(dep_scanner.get_pkgconfig_variable('wayland_scanner'))
 
 dep_wp = dependency('wayland-protocols', version: '>= 1.18')
diff --git a/shared/xalloc.c b/shared/xalloc.c
index 1cc5c12..1cad424 100644
--- a/shared/xalloc.c
+++ b/shared/xalloc.c
@@ -36,7 +36,7 @@ void *
 fail_on_null(void *p, size_t size, char *file, int32_t line)
 {
 	if (p == NULL) {
-		fprintf(stderr, "[%s] ", program_invocation_short_name);
+		printf(stderr);
 		if (file)
 			fprintf(stderr, "%s:%d: ", file, line);
 		fprintf(stderr, "out of memory");
diff --git a/tests/weston-test.c b/tests/weston-test.c
index 772e5d0..8fc075b 100644
--- a/tests/weston-test.c
+++ b/tests/weston-test.c
@@ -618,11 +618,13 @@ handle_compositor_destroy(struct wl_listener *listener,
 
 	test = wl_container_of(listener, test, destroy_listener);
 
+#ifndef __ANDROID__
 	if (test->client_source) {
 		weston_log_scope_printf(test->log, "Cancelling client thread...\n");
 		pthread_cancel(test->client_thread);
 		client_thread_join(test);
 	}
+#endif
 
 	if (test->is_seat_initialized)
 		test_seat_release(test);
